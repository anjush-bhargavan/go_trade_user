syntax = "proto3";

package pb;

option go_package = "./";

service UserService {
    rpc UserSignup(Signup) returns(Response);
    rpc VerfiyUser(OTP) returns (Response);
    rpc UserLogin(Login) returns (Response);

    rpc ViewProfile(ID) returns (Profile); 
    rpc EditProfile(Profile) returns(Profile);
    rpc ChangePassword(Password) returns(Response);
    rpc BlockUser(ID) returns(Response);

    rpc AddAddress(Address) returns(Response);
    rpc ViewAllAddress(NoParam) returns(AddressList);
    rpc EditAddress(Address) returns(Address);
    rpc RemoveAddress(IDs) returns(Response);
    

    // rpc BeASeller(ID) returns (Response) ;

    rpc AddProduct(UserProduct) returns (Response);
    rpc EditProductUser(UserProduct) returns (UserProduct);
    rpc RemoveProductUser(IDs) returns(Response);
    rpc FindProductByIDUser(ID) returns(UserProduct);
    rpc FindProductByCategoryUser(ID) returns(UserProductList);
    rpc FindAllProductsUser(NoParam) returns (UserProductList);

    rpc FindCategory(ID) returns(UserCategory);
    rpc FindCategories(NoParam) returns (UserCategoryList);

    rpc AddToWatchlist(IDs) returns(Response);
    rpc ViewWatchlist(ID) returns(UserCategoryList);
    rpc ViewWatchlistUsers(ID) returns(UserList);
    
    rpc AddBid(UserBid) returns (Response);
    rpc GetBids(ID) returns(UserBidList);

    rpc CreateTransaction(Transaction) returns (Response);
    rpc FindTransactionByUser(ID) returns (TransactionList);
    rpc FindAllTransactions(NoParam) returns(TransactionList);

    rpc UserCreatePayment(UserBid) returns(UserPaymentResponse);
    rpc UserPaymentSuccess(UserPayment) returns(Response);
}
message UserPaymentResponse {
    uint32 Product_ID = 1;
    string User_Name = 2;
    string User_Email = 3;
    float Amount = 4;
    string Order_ID = 5;
}

message UserPayment {
    uint32 User_ID = 1;
    string Payment_ID = 2;
    float Amount = 3;
    uint32 Product_ID = 4;

}

message TransactionList {
    repeated Transaction Transactions = 1;
}

message Transaction {
    uint32 Transaction_ID = 1;
    uint32 User_ID = 2;
    string Name = 3;
    float Amount = 4;
}

message NoParam {}

message Response {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        string data = 4;
    }
}

message Signup {
    string User_Name = 1;
    string Email = 2;
    string Password = 3;
    string Mobile = 4;
    string Referral_Code = 5;
};

message OTP {
    string Email = 1;
    string OTP = 2;
}

message Login {
    string Email = 1;
    string Password = 2;
}

message ID {
    uint32 ID = 1;
}

message IDs {
    uint32 ID = 1;
    uint32 User_ID = 2;
}

message UserList {
    repeated Profile Users = 1;
}

message Profile {
    uint32 User_ID = 1;
    string User_Name = 2;
    string Email = 3; 
    string Mobile = 4;
    string Referral_Code = 5;
    float Wallet = 6;
    bool Is_Blocked = 7;
    uint32 Rejection_Count = 8;
}

message Address {
    uint32 ID = 7;
    uint32 User_ID = 1;
    string House = 2;
    string Street = 3;
    string City = 4;
    uint32 Zip = 5;
    string State = 6;
}

message AddressList {
    repeated Address Addresses = 1;
}

message Password {
    uint32 User_ID = 1;
    string Old_Password = 2;
    string New_Password = 3;
    string Confirm_Password = 4;
}

message UserProduct {
    string Name = 1;
    uint32 Seller_ID = 2;
    UserCategory Category = 3;
    uint32 Base_Price = 4;
    string Description = 5;
    bool   Bidding_Type = 6;
    string Bidding_Start_Time = 7;
    string Bidding_End_Time = 8;
    string Listed_On = 9; 
    uint32 Product_ID = 10;
    string Status = 11;
}

message UserProductList {
    repeated UserProduct Products = 1;
}

message UserCategoryList {
    repeated UserCategory Categories = 1;
}

message UserCategory {
    uint32 Category_ID = 1;
    string Name = 2;
    string Description = 3;
}

message UserBidList {
    uint32 Bid_ID = 1;
    uint32 Product_ID = 2;
    string Product_Name = 3;
    uint32 Seller_ID = 4;
    float Base_Price = 5;
    repeated UserBid Bids = 6;
}

message UserBid {
    uint32 User_ID = 1;
    uint32 Product_ID = 2;
    float Amount = 3; 
}